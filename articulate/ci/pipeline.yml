---
# == Description
# This is a sample apps' CI/CD pipeline which includes some typical steps:
# 1. Get source code from repo like Git
# 2. Build it with unit tests embedded
# 3. Deploy it to PCF
# 4. Perform some smoke tests

jobs:
- name: build-and-deploy
  plan:

  #1. Get source code from repo like Git
  - get: resource-git
    trigger: true

  #2. Build it with unit tests embedded
  - task: build-artifacts
    file: resource-git/articulate/ci/tasks/build.yml

  # Deploy Artifact
  - task: deploy
    file: resource-git/articulate/ci/tasks/deploy.yml
    params:
      api: {{pcf-api}}
      username: {{pcf-username}}
      password: {{pcf-password}}
      organization: {{pcf-organization}}
      space: {{pcf-space}}
      app_name: {{app-name}}
      app_host: {{app-host}}
      domain: {{pcf-domain}}
#  - put: resource-pcf
#    params:
#      manifest: resource-git/articulate/manifest-v2.yml
#      path: artifacts/articulate-*.jar
#      current_app_name: ((app-name))

  # Deploy Artifact
  - task: deploy-Cloud2
    file: resource-git/articulate/ci/tasks/deploy.yml
    params:
      api: {{cloud2-pcf-api}}
      username: {{cloud2-pcf-username}}
      password: {{cloud2-pcf-password}}
      organization: {{cloud2-pcf-organization}}
      space: {{cloud2-pcf-space}}
      app_name: {{cloud2-app-name}}
      app_host: {{cloud2-app-host}}
      domain: {{cloud2-pcf-domain}}

  #3. build Attendee
  #- task: build-artifacts
  #  file: resource-git/attendee/ci/tasks/build.yml

  #4. Deploy Attendee
  #- put: resource-pcf
  #  params:
  #    manifest: resource-git/attendee/manifest.yml
  #    path: artifacts/attendee-*.jar

  # Verify the app whether it's been successfully deployed
  # - get: image-javagradlegitpack
  # - task: smoke-tests
  #   image: image-javagradlegitpack
  #  file: resource-git/articulate/ci/tasks/smoke-tests.yml
  #  params:
  #    app_url: ((app_url))

##############################
resources:
# GIT
- name: resource-git
  type: git
  source:
    uri: https://github.com/rpremr/PCFBlueGreenAcrossClouds
    branch: master

# CF
#- name: resource-pcf
#  type: cf
#  source:
#    api: ((pcf-api))
#    username: ((pcf-username))
#    password: ((pcf-password))
#    organization: ((pcf-organization))
#    space: ((pcf-space))
#    skip_cert_check: true

# Custom Image
#- name: image-javagradlegitpack
#  type: docker-image
#  source:
#    repository: ((docker_image))
#    insecure_registries: ((docker_insecure_registries))
#    tag: latest
